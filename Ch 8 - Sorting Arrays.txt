// Attempt1.cpp : Defines the entry point for the console application.
//This program asks a user for 5 different test scores that are
//betwen 0 and 100 and are whole numbers (integers) and then
//displays them in ascending order along with their
//corresponding letter grade

#include "stdafx.h"
#include <cstdlib>
#include <iostream>
#include <string>


using namespace std;

//Function prototypes
void validateUserInput(int testScores[], int i);
int calculateAverage(int testScores[], int i);
void bubbleSort(int testScores[], const int NumberOfTests);
void swap(int *xp, int *yp);
void determineGrade(int testScores[], char letterGrades[]);
void displayTestScores(int testScores[]);

//Constant for the array size
const int NumberOfTests = 5;

int main()
{
	//Constant for the array size
	const int NumberOfTests = 5;

	//Variable declarations
	int total = 0;
	int i = 0;

	//Initialize array with letter grades
	char letterGrades[NumberOfTests] = { 'A', 'B', 'C', 'D', 'F' };

	//Declare array to hold test scores
	int testScores[NumberOfTests];

	//Ask the user to input test scores and validate them
	validateUserInput(testScores, i);

	//Call the function to sort the testScores array in ascending order
	bubbleSort(testScores, NumberOfTests);

	//Display what the testScores array holds
	displayTestScores(testScores);

	//Call the function to calculate the average
	calculateAverage(testScores, i);
	cout << endl;

	system("PAUSE");
	return 0;
}
//This function is used to gather test scores from the user,
//validate them, and then store them in the array. It throws
//away any bad input such as letters, special characters,
//and numbers that are not integers between 1 & 100
void validateUserInput(int testScores[], int i)
{
	//local variable declaration
	string input;
	int temp;

	//For loop is for gathering input for each
	//index position of the array called testScores
	for (int i = 0; i < NumberOfTests; i++)
	{
		cout << "Enter score " << (i + 1) << endl;
		getline(cin, input);
		
		//This while loop looks for anything other than whole digits and display
		//an error message if found, and asks for new input
		while (input.find_first_not_of("1234567890") != -1 || input == "")
		{
			cout << "Enter a score between 0 and 100" << endl;
			cin.clear();
			getline(cin, input);
		}
		
		//convert string to int and store in temp variable
		temp = stoi(input);
		
		//If statement to test if the score the user entered is
		//in the range of 1-100. Displays an error message if not and
		//asks the user for new input
		if (temp < 0 || temp >100)
			{
				cout << "Enter a score between 0 and 100" << endl;
				cin.clear();
				getline(cin, input);

				//Nested while loop to check for input that is invalid again.
				//Asks the user for new input after
				while (input.find_first_not_of("1234567890") != -1 || input == "")
				{
					cout << "Enter a score between 0 and 100" << endl;
					cin.clear();
					getline(cin, input);
				}
				
			}
		//Exit the loop
		else { };

		//convert string to int and store the valid
		//score in the index position 'i' in the testScores array
		temp = stoi(input);
		testScores[i] = temp;
	}
}
//This function performs a swap
//of two variables
void swap(int *xp, int *yp)
{
	int temp = *xp;
	*xp = *yp;
	*yp = temp;
}
//Bubble Sort algorithm to sort the test scores in ascending order
void bubbleSort(int testScores[], const int NumberOfTests)
{
	//Local variables
	int i, j;

	//For loop to edit the array one index at a time
	for (i = 0; i < (NumberOfTests - 1); i++)

		//Last i elements are already in place
		for (j = 0; j < (NumberOfTests - i - 1); j++)
			if (testScores[j] > testScores[j + 1])
				swap(&testScores[j], &testScores[j + 1]);

}
//Function to calculate the average of all the valid
//test scores entered by the user. 
int calculateAverage(int testScores[], int i)
{
	//Local variables
	int total = 0;
	int average;

	//Add each element to the total
	for (int i = 0; i < 5; i++)
	{
		total += testScores[i];
	}

	//Divide the total by 5 and assign it to average
	average = (total / 5);
	cout << "The average of the five scores is " << average << endl;
	return 0;
}
//Function to determine which scores earn which grades
void determineGrade(int testScores[], char letterGrades[])
{
	//Local array definition of size 5
	string scoresANDgrades[NumberOfTests];

	//For loop to parse through array one index
	//at a time and determine where the score falls
	//on the grading scale
	for (int i = 0; i < 4; i++)
	{
		if (testScores[i] >= 0 && testScores[i] < 60)
		{
			scoresANDgrades[i] = (testScores[i]) + (letterGrades[4]);
		}
		else if (testScores[i] >= 60 && testScores[i] < 70)
		{
			scoresANDgrades[i] = (testScores[i] + letterGrades[3]);
		}
		else if (testScores[i] >= 70 && testScores[i] < 80)
		{
			scoresANDgrades[i] = (testScores[i] + letterGrades[2]);
		}
		else if (testScores[i] >= 80 && testScores[i] < 90)
		{
			scoresANDgrades[i] = (testScores[i] + letterGrades[1]);
		}
		else if (testScores[i] >= 90 && testScores[i] < 100)
		{
			scoresANDgrades[i] = (testScores[i] + letterGrades[0]);
		}
	}

	//
	cout << "Score LetterGrade" << endl;

	//For loop to display everything held in the
	//array named scoresANDgrades
	for (int i = 0; i < 4; i++)
	{
		cout << scoresANDgrades[i];
		cout << endl;
	}
}
//Function to display the test scores and
//their corresponding grades
void displayTestScores(int testScores[])
{
	cout << "Score LetterGrade" << endl;
	
	//For loop to display everything held in the
	//array named testScores
	for (int i = 0; i < NumberOfTests; i++)
	{
		//Output for score of 100
		if (testScores[i] == 100)
		{
			cout << "  " << testScores[i];
			cout << " A" << endl;
		}
		//Output for scores between 90 and 99
		else if (testScores[i] >= 90 && testScores[i] <= 99)
		{
			cout << "   " << testScores[i];
			cout << " A" << endl;
		}
		//Output for scores between 80 and 89
		else if (testScores[i] >= 80 && testScores[i] < 90)
		{
			cout << "   " << testScores[i];
			cout << " B" << endl;
		}
		//Output for scores between 70 and 79
		else if (testScores[i] >= 70 && testScores[i] < 80)
		{
			cout << "   " << testScores[i];
			cout << " C" << endl;
		}
		//Output for scored between 60 and 69
		else if (testScores[i] >= 60 && testScores[i] < 70)
		{
			cout << "   " << testScores[i];
			cout << " D" << endl;
		}
		//Output for scores between 10 and 59
		else if (testScores[i] >= 10 && testScores[i] < 60)
		{
			cout << "   " << testScores[i];
			cout << " F" << endl;
		}
		//Output for scores between 0 and 9
		else if (testScores[i] >= 0 && testScores[i] <= 9)
		{
			cout << "    " << testScores[i];
			cout << " F" << endl;
		}
	}
}